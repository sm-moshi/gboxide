[workspace]
members  = ["core-lib", "cli", "common"] #  "gui"]
resolver = "2"

[workspace.package]
edition       = "2021"
rust-version  = "1.78.0"
license       = "MIT OR Apache-2.0"
repository    = "https://github.com/sm-moshi/gboxide"
homepage      = "https://github.com/sm-moshi/gboxide"
documentation = "https://docs.rs/gboxide"


[workspace.dependencies]
core-lib = { path = "core-lib" }
common   = { path = "common" }

tokio = { version = "1.44.2", features = ["rt-multi-thread", "macros", "time"] }

wgpu     = "25.0.0"
image    = "0.25.6"
bytemuck = { version = "1.22", features = ["derive"] }
winit    = "0.30.9"
cpal     = "0.15.3"

dioxus         = { version = "0.6.3", features = ["desktop", "router"] }
dioxus-desktop = "0.6.3"

tracing            = "0.1.41"
tracing-subscriber = "0.3.19"
tracing-log        = "0.2.0"
log                = "0.4.27"

anyhow            = "1.0.98"
thiserror         = "2.0.12"
bitflags          = "2.9.0"
bitfield          = "0.19.0"
pretty_assertions = "1.4.1"
test-case         = "3.3.1"
proptest          = "1.6.0"
insta             = { version = "1.42.2", features = ["redactions", "yaml", "serde"] }
criterion         = "0.5.1"

serde      = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.140"

getrandom    = { version = "0.3.2", features = ["js"] }
js-sys       = "0.3.77"
wasm-bindgen = "0.2.100"
bincode      = "2.0.1"
memmap2      = "0.9.5"

[profile.dev]
opt-level        = 1
debug            = true
overflow-checks  = true
lto              = false
debug-assertions = true
incremental      = true

[profile.dev.package]
insta.opt-level   = 3
similar.opt-level = 3

[profile.release]
opt-level     = "z"         # size-optimized; use "3" for performance
lto           = true
codegen-units = 1
debug         = false
panic         = "abort"
strip         = "debuginfo"

[profile.release-wasm]
inherits  = "release"
opt-level = "z"
lto       = true
panic     = "abort"
strip     = "symbols"

[workspace.lints.clippy]
# Allowed lints (temporarily noisy false positives)
missing_errors_doc       = "allow"
missing_panics_doc       = "allow"
match_same_arms          = "allow"
verbose_bit_mask         = "allow"
cast_possible_wrap       = "allow"
must_use_candidate       = "allow"
cast_lossless            = "allow"
cast_possible_truncation = "allow"
cast_sign_loss           = "allow"

# Warning level lints
# missing_docs    = "warn"
# unreachable_pub = "warn"
# unused_results = "warn"

# Lint groups with priorities
all      = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
nursery  = { level = "warn", priority = -1 }

# Denied lints (completely disallowed)
unwrap_used = "deny"
expect_used = "deny"
todo        = "deny"
dbg_macro   = "deny"
